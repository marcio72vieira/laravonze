001 -   Para criar o projeto:
        a) Dentro da pasta de projetosdocker digitar:
            curl -s https://laravel.build/laravonze | bash
        b) No arquivo docker-compose.yml alterar conforme código abaixo:
            b.1) - '${APP_PORT:-8080}:80'
            b.2) - '${FORWARD_DB_PORT:-3307}:3306'
            b.3) - '${FORWARD_REDIS_PORT:-6380}:6379'
        c) Acrescentar no arquivo .env as variáveis, conforme abaixo:
            c.1) APP_TIMEZONE=America/Sao_Paulo
            c.2) APP_LOCALE=pt-BR
            c.3) APP_PORT=8080
            c.4) FORWARD_DB_PORT=3307
            c.5) DB_DATABASE=laravonze
        d) Na pasta do projeto digitar:
            d.1) ./vendor/bin/sail up -d
            d.2) ./vendor/bin/sail artisan migrate


002 -   Para executar o projeto:
        Com os "containers" levantados (./vendor/bin/sail up -d), na barra de navegação, digitar:
        http://localhost:8080

003 -   Para gerar uma chave para aplicação quando necessário. Com os "containers" levantados, dentro da pasta do projeto:
        marcio@vaio:~/projetosdocker/laravonze$  ./vendor/bin/sail artisan key:generate

004 -   Para instalar ou atualizar as dependências da aplicação:
        marcio@vaio:~/projetosdocker/laravonze$  ./vendor/bin/sail composer install OU composer update

005 -   Para ver as versões do PHP, MySQL, Composer, NPM e Node instaladas, digitar:
        marcio@vaio:~/projetosdocker/laravonze$ ./vendor/bin/sail php -v
        marcio@vaio:~/projetosdocker/laravonze$ mysql --version
        marcio@vaio:~/projetosdocker/laravonze$ ./vendor/bin/sail composer
        marcio@vaio:~/projetosdocker/laravonze$ ./vendor/bin/sail npm -v
        marcio@vaio:~/projetosdocker/laravonze$ ./vendor/bin/sail node -v

006- -  Criando seed
        a) ./vendor/bin/sail artisan make:seeder CourseSeeder
        b) Modificar o método run, da seeder criada na linha acima:
                public function run(): void
                {
                        // Só cria um curso, se não existir um curso com o nome já cadastrado
                        if(!Course::where('name','Curso de Laravel - T1')->first()){
                        Course::create([
                                'name' => 'Curso de Laravel - T1'
                        ]);
                        }
                        
                        if(!Course::where('name','Curso de Laravel - T2')->first()){
                        Course::create([
                                'name' => 'Curso de Laravel - T2'
                        ]);
                        }
                }
        c) Acrescentar no arquivo: database/seeders/DatabaseSeeder.php, o trecho de código conforme abaixo:
                $this->call([
                        CourseSeeder::class,
                ]);
        d) Execute a seed com o comando abaixo:
                ./vendor/bin/sail artisan db:seed
        
007 -   Adicionando uma coluna a uma tabela existente
        a) Digitar o comando relacinado à cricção da coluna(s) na tabela desejada
           marcio@vaio:~/projetosdocker/laravonze$ ./vendor/bin/sail artisan make:migration alter_courses_add_price_table
        b) Digitar no corpo do método criado pelo comando acima o trecho de código a seguir:
                public function up(): void
                {
                        Schema::table('courses', function(Blueprint $table){
                                $table->float('price')->after('name')->default(0);
                        });
                }

                /**
                * Reverse the migrations.
                */
                public function down(): void
                {
                        Schema::table('courses', function(Blueprint $table){
                                $table->dropColumn('price');
                        });
                }
        c) Executar o comando migrate
           marcio@vaio:~/projetosdocker/laravonze$ ./vendor/bin/sail artisan migrate
        d) Alterar a seed referente á coluna com o novo campo Adicionando
                // Só cria um curso, se não existir um curso com o nome já cadastrado
                if(!Course::where('name','Curso de Laravel - T1')->first()){
                        Course::create([
                                'name' => 'Curso de Laravel - T1',
                                'price' => 197.43
                        ]);
                }
                
                if(!Course::where('name','Curso de Laravel - T2')->first()){
                        Course::create([
                                'name' => 'Curso de Laravel - T2',
                                'price' => 247.43
                        ]);
                }





CMD01 - marcio@vaio:~/projetosdocker/laravonze$ ./vendor/bin/sail artisan migrate
CMD02 - marcio@vaio:~/projetosdocker/laravonze$ ./vendor/bin/sail artisan make:controller CourseController
CMD03 - marcio@vaio:~/projetosdocker/laravonze$ ./vendor/bin/sail artisan make:view courses/index
CMD04 - marcio@vaio:~/projetosdocker/laravonze$ ./vendor/bin/sail artisan make:model Course
CMD05 - marcio@vaio:~/projetosdocker/laravonze$ ./vendor/bin/sail artisan make:migration alter_courses_add_price_table
CMD06 - marcio@vaio:~/projetosdocker/laravonze$ ./vendor/bin/sail artisan migrate:rollback



OBS01 - Os arquivos CSS e JS quando colocados dentro das pasta "resources/css e resources/js" não são visualizados pelo
        usuário final, mas se colocados na pasta public/css ou public/js os mesmos serão.

Ir para o GitHub
Criar um novo projeto: laravonze
Realizar a sequencia de comandos abaixo na pasta do projeto
marcio@vaio:~/projetosdocker/laravonze$ git init
marcio@vaio:~/projetosdocker/laravonze$ git remote add origin https://github.com/marcio72vieira/laravonze.git
marcio@vaio:~/projetosdocker/laravonze$ git status
marcio@vaio:~/projetosdocker/laravonze$ git add .
marcio@vaio:~/projetosdocker/laravonze$ git commit -m "Inicio do projeto com Laravel 11"
marcio@vaio:~/projetosdocker/laravonze$ git push origin master
    user:
    password:

OBS03 - COnfigurações para acessar banco com MySQL WorkBranch
        1 - Connection Name: CelkeLaravel11
        2 - Hostname: 127.0.0.1
        3 - Port: 3307
        4 - User Name: sail
        5 - Store in Keichain...: password
        6 - Default Schema: laravonze
        7 - Clicar no botão: Test Connection

token
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









